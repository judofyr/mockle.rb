#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'mockle/lexer'

module Mockle
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 108)
  def initialize(options = {})
    super()
  end

  def parse(str)
    @locals = {}
    @lexer = Lexer.new(str)
    [:mockle, :block, do_parse]
  end
  
  alias call parse
  
  def next_token
    @lexer.next_token
  end

  def on_error(t, val, vstack)
    p @lexer
    super
  end
  
  def combine(a, b)
    a = [:multi, a] unless a[0] == :multi
    if b[0] == :multi
      a.concat(b[1..-1])
    else
      a << b
    end
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    11,    45,    59,    21,    19,    45,     7,    54,     6,     4,
    60,    65,    20,    71,    70,    12,    12,    13,    13,    18,
    12,     5,    13,    11,    14,    14,    21,    19,    59,    14,
    69,     6,     4,     6,    78,    20,    60,    59,    12,    65,
    13,    65,    18,    76,     5,    60,    79,    14,    25,    26,
    27,    28,    29,    56,     6,    78,    31,    55,    25,    26,
    27,    28,    29,    68,   -22,    30,    31,    79,    25,    26,
    27,    28,    29,    99,    65,    30,    31,   -23,    25,    26,
    27,    28,    29,    53,    37,    30,    31,    21,    19,    37,
    89,    43,    21,    19,    37,    30,    20,    21,    19,    91,
    89,    20,    93,    18,    88,    87,    20,    37,    18,    65,
    21,    19,    37,    18,    41,    21,    19,    37,    40,    20,
    21,    34,    65,    98,    20,    39,    18,    38,    65,    35,
    37,    18,    23,    21,    19,    37,    18,    22,    21,    19,
    37,    86,    20,    21,    19,   nil,   nil,    20,   nil,    18,
   nil,   nil,    20,    37,    18,   nil,    21,    19,    37,    18,
   nil,    21,    19,    37,   nil,    20,    21,    19,   nil,   nil,
    20,   nil,    18,     6,     4,    20,    37,    18,   nil,    21,
    19,    37,    18,   nil,    21,    19,     5,    37,    20,   nil,
    63,    62,   nil,    20,   nil,    18,   nil,     6,     4,   nil,
    18,    25,    26,    27,    28,    29,    27,    28,    29,    31,
     5,    25,    26,    27,    28,    29,     6,     4,    30,    31,
    25,    26,    27,    28,    29,     6,    78,    24,    30,     5,
     6,     4,     6,    78,     6,     4,   nil,    30,    79,     6,
    78,   nil,   nil,     5,   nil,    79,   nil,     5,    27,    28,
    29,   nil,    79,    25,    26,    27,    28,    29 ]

racc_action_check = [
    78,    22,    45,    78,    78,    86,     1,    33,     1,     1,
    45,    71,    78,    61,    60,    78,    22,    78,    22,    78,
    86,     1,    86,     4,    78,    22,     4,     4,    40,    86,
    58,    97,    97,    90,    90,     4,    40,    39,     4,    53,
     4,    76,     4,    73,    97,    39,    90,     4,    73,    73,
    73,    73,    73,    36,    75,    75,    73,    35,    36,    36,
    36,    36,    36,    57,    34,    73,    36,    75,    57,    57,
    57,    57,    57,    96,    68,    36,    57,    55,    96,    96,
    96,    96,    96,    32,    54,    57,    96,    54,    54,    91,
    85,    20,    91,    91,    38,    96,    54,    38,    38,    87,
    81,    91,    88,    54,    81,    81,    38,    18,    91,    89,
    18,    18,    69,    38,    16,    69,    69,    11,    14,    18,
    11,    11,    92,    93,    69,    13,    18,    12,    99,    11,
    37,    69,     7,    37,    37,    26,    11,     5,    26,    26,
    27,    79,    37,    27,    27,   nil,   nil,    26,   nil,    37,
   nil,   nil,    27,    28,    26,   nil,    28,    28,    29,    27,
   nil,    29,    29,    30,   nil,    28,    30,    30,   nil,   nil,
    29,   nil,    28,    74,    74,    30,    31,    29,   nil,    31,
    31,    25,    30,   nil,    25,    25,    74,    41,    31,   nil,
    41,    41,   nil,    25,   nil,    31,   nil,    83,    83,   nil,
    25,    67,    67,    67,    67,    67,    47,    47,    47,    67,
    83,     9,     9,     9,     9,     9,    72,    72,    67,     9,
    52,    52,    52,    52,    52,   100,   100,     9,     9,    72,
   101,   101,    77,    77,     0,     0,   nil,    52,   100,   103,
   103,   nil,   nil,   101,   nil,    77,   nil,     0,    46,    46,
    46,   nil,   103,    51,    51,    51,    51,    51 ]

racc_action_pointer = [
   232,     6,   nil,   nil,    19,   134,   nil,   132,   nil,   201,
   nil,   113,   123,   121,   114,   nil,   105,   nil,   103,   nil,
    83,   nil,    -3,   nil,   nil,   177,   131,   136,   149,   154,
   159,   172,    78,   -10,    47,    49,    48,   126,    90,    29,
    20,   183,   nil,   nil,   nil,    -6,   236,   194,   nil,   nil,
   nil,   243,   210,    13,    80,    60,   nil,    58,     8,   nil,
     6,     8,   nil,   nil,   nil,   nil,   nil,   191,    48,   108,
   nil,   -15,   214,    38,   171,    52,    15,   230,    -4,   138,
   nil,    80,   nil,   195,   nil,    70,     1,    95,    98,    83,
    31,    85,    96,   118,   nil,   nil,    68,    29,   nil,   102,
   223,   228,   nil,   237,   nil ]

racc_action_default = [
   -44,   -44,    -2,    -3,   -44,   -44,   -25,   -44,    -1,    -4,
    -6,   -44,   -44,   -44,   -44,   -26,   -27,   -28,   -44,   -38,
   -44,   -43,   -44,   105,    -5,   -44,   -44,   -44,   -44,   -44,
   -44,   -44,   -44,   -44,   -38,   -44,   -44,   -44,   -44,   -44,
   -44,   -44,   -36,   -39,    -7,   -44,   -29,   -30,   -31,   -32,
   -33,   -34,   -35,   -10,   -44,   -39,   -37,   -44,   -44,   -22,
   -44,   -44,   -40,   -41,   -42,   -11,   -12,   -16,   -10,   -44,
   -23,   -10,   -44,   -44,   -44,   -44,   -10,   -44,    -8,   -44,
   -13,   -44,   -19,   -44,   -15,   -44,    -9,   -44,   -20,   -10,
   -44,   -44,   -10,   -44,   -24,   -14,   -44,   -44,   -21,   -10,
   -44,   -44,   -18,   -44,   -17 ]

racc_goto_table = [
     8,    36,    44,     1,    81,    80,    92,    66,    42,    58,
    61,    84,    64,   nil,   nil,    46,    47,    48,    49,    50,
    51,    52,    72,   nil,    95,    74,   nil,    36,    57,   nil,
    83,   nil,    81,   104,   102,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    94,    67,   nil,    97,   nil,   nil,   nil,
   nil,   nil,   nil,   101,   nil,   nil,   nil,   nil,   nil,    73,
   nil,   nil,   nil,   nil,   nil,   nil,    44,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     8,    75,     8,    77,   nil,   nil,
   nil,    96,   nil,   nil,   nil,   nil,    90,   nil,   nil,     8,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,
   100,   nil,     8,   nil,   103 ]

racc_goto_check = [
     2,     4,     5,     1,     6,     9,    12,     7,     4,    10,
    10,    11,    13,   nil,   nil,     4,     4,     4,     4,     4,
     4,     4,     7,   nil,    11,     7,   nil,     4,     4,   nil,
     7,   nil,     6,     9,    11,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,     4,   nil,     7,   nil,   nil,   nil,
   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,     1,     2,     1,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,     1,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
     1,   nil,     2,   nil,     1 ]

racc_goto_pointer = [
   nil,     3,    -1,   nil,   -10,   -20,   -71,   -46,   nil,   -70,
   -30,   -66,   -82,   -29,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     9,    10,    85,   nil,    32,   nil,
    33,    82,   nil,    15,    16,    17 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 31, :_reduce_1,
  1, 31, :_reduce_none,
  1, 32, :_reduce_none,
  2, 32, :_reduce_4,
  3, 32, :_reduce_5,
  2, 32, :_reduce_6,
  3, 32, :_reduce_7,
  1, 36, :_reduce_none,
  2, 36, :_reduce_none,
  0, 37, :_reduce_none,
  1, 37, :_reduce_none,
  4, 35, :_reduce_12,
  7, 35, :_reduce_13,
  9, 35, :_reduce_14,
  7, 35, :_reduce_15,
  3, 38, :_reduce_16,
  8, 39, :_reduce_17,
  6, 39, :_reduce_18,
  1, 39, :_reduce_19,
  0, 42, :_reduce_none,
  2, 42, :_reduce_none,
  1, 40, :_reduce_22,
  2, 40, :_reduce_23,
  3, 41, :_reduce_none,
  1, 33, :_reduce_25,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  3, 34, :_reduce_29,
  3, 34, :_reduce_30,
  3, 34, :_reduce_31,
  3, 34, :_reduce_32,
  3, 34, :_reduce_33,
  3, 34, :_reduce_34,
  3, 34, :_reduce_35,
  2, 34, :_reduce_36,
  3, 43, :_reduce_37,
  1, 44, :_reduce_38,
  2, 44, :_reduce_39,
  3, 44, :_reduce_40,
  3, 44, :_reduce_41,
  3, 44, :_reduce_42,
  1, 45, :_reduce_43 ]

racc_reduce_n = 44

racc_shift_n = 105

racc_token_table = {
  false => 0,
  :error => 1,
  :TEXT => 2,
  :START => 3,
  :LPAREN => 4,
  :RPAREN => 5,
  :STRING => 6,
  :NUM => 7,
  :IDENT => 8,
  :DOT => 9,
  :ADD => 10,
  :SUB => 11,
  :MUL => 12,
  :DIV => 13,
  :MOD => 14,
  :SPACE => 15,
  :DOLLAR => 16,
  :ASSIGN => 17,
  :CMP => 18,
  :IF => 19,
  :END => 20,
  :FOR => 21,
  :IN => 22,
  :BANG => 23,
  :ELSE => 24,
  :ELSEIF => 25,
  :NEWLINE => 26,
  :INNERSPACE => 27,
  :CAPTURE => 28,
  :NOT => 29 }

racc_nt_base = 30

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TEXT",
  "START",
  "LPAREN",
  "RPAREN",
  "STRING",
  "NUM",
  "IDENT",
  "DOT",
  "ADD",
  "SUB",
  "MUL",
  "DIV",
  "MOD",
  "SPACE",
  "DOLLAR",
  "ASSIGN",
  "CMP",
  "IF",
  "END",
  "FOR",
  "IN",
  "BANG",
  "ELSE",
  "ELSEIF",
  "NEWLINE",
  "INNERSPACE",
  "CAPTURE",
  "NOT",
  "$start",
  "program",
  "content",
  "text",
  "expression",
  "statement",
  "stmt_start",
  "opt_newline",
  "assignment",
  "ifclose",
  "lvalue",
  "end_block",
  "opt_parens",
  "group",
  "variable",
  "number" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_1(val, _values, result)
     result = combine(val[0], val[1]) 
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_4(val, _values, result)
     result = [:mockle, :output, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_5(val, _values, result)
     result = [:multi, [:mockle, :output, val[1]], [:static, val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_6(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_7(val, _values, result)
     result = val[2] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_12(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_13(val, _values, result)
     result = [:mockle, :if, val[2], val[5], val[6]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_14(val, _values, result)
            result = [:mockle, :for, val[2], val[4], val[7]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_15(val, _values, result)
            result = [:mockle, :capture, val[2], val[5]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_16(val, _values, result)
     result = [:mockle, :assign, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_17(val, _values, result)
     result = [:mockle, :if, val[3], val[6], val[7]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_18(val, _values, result)
     result = val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_19(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_22(val, _values, result)
            @locals[val[0]] = true
        result = [:mockle, :var, val[0]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_23(val, _values, result)
     result = [:mockle, :lctx, val[1]] 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_25(val, _values, result)
     result = [:static, val.first] 
    result
  end
.,.,

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_29(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_30(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_31(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_32(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_33(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_34(val, _values, result)
     result = [:mockle, :concat, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_35(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_36(val, _values, result)
     result = [:mockle, :not, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_37(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_38(val, _values, result)
     result = [:mockle, @locals[val[0]] ? :var : :ctx, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_39(val, _values, result)
     result = [:mockle, :ctx, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_40(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_41(val, _values, result)
     result = [:mockle, :dot, val[0], val[2].to_i] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_42(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_43(val, _values, result)
     result = [:mockle, :num, val.first] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Mockle
