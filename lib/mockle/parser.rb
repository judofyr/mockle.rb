#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'mockle/lexer'

module Mockle
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 129)
  def initialize(options = {})
    super()
  end

  def parse(str)
    @lexer = Lexer.new(str)
    [:mockle, :block, do_parse]
  end
  
  alias call parse
  
  def next_token
    @lexer.next_token
  end

  def on_error(t, val, vstack)
    p @lexer
    super
  end
  
  def combine(a, b)
    a = [:multi, a] unless a[0] == :multi
    if b[0] == :multi
      a.concat(b[1..-1])
    else
      a << b
    end
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    11,    85,    24,    23,    21,    21,    79,    39,    21,    68,
    56,    55,    22,    22,    67,    13,    22,    14,    11,    20,
    24,    23,    21,    47,    15,    12,    86,    35,    21,    47,
    22,    80,    73,    13,    35,    14,    22,    20,    13,    35,
    14,    68,    15,    12,    13,    81,    14,    15,    12,     6,
     4,    74,    68,    15,    12,    35,    28,    29,    30,    31,
    32,    60,     5,    35,    34,    35,    28,    29,    30,    31,
    32,   114,    73,    33,    34,    35,    28,    29,    30,    31,
    32,    90,    68,    33,    34,    35,    28,    29,    30,    31,
    32,     6,     4,    33,    34,    39,    75,    24,    23,    21,
     6,    93,    62,    33,     5,    59,    39,    22,    24,    23,
    21,     6,    93,    94,    20,   101,    59,    39,    22,    24,
    23,    21,     6,     4,    94,    20,    58,   104,    39,    22,
    24,    23,    21,     6,    93,     5,    20,    45,   106,    39,
    22,    24,    23,    21,     6,     4,    94,    20,   108,    68,
    39,    22,    24,    23,    21,     6,    93,     5,    20,    43,
    42,    39,    22,    24,    23,    21,     6,     4,    94,    20,
    68,   113,    39,    22,    24,    23,    21,     6,     4,     5,
    20,    41,    40,    39,    22,    24,    23,    21,     6,    93,
     5,    20,    68,    26,    39,    22,    24,    23,    21,   104,
    25,    94,    20,   103,   102,    39,    22,    24,    23,    21,
    76,   nil,   nil,    20,   nil,   nil,    39,    22,    24,    23,
    21,   nil,   nil,   nil,    20,   nil,   nil,    39,    22,    24,
    23,    21,   nil,   nil,   nil,    20,   nil,   nil,    39,    22,
    24,    23,    21,   nil,   nil,   nil,    20,   nil,   nil,    39,
    22,    24,    23,    21,   nil,   nil,   nil,    20,   nil,   nil,
    39,    22,    24,    23,    21,   nil,   nil,     7,    20,     6,
     4,    39,    22,    24,    23,    21,   nil,   nil,   nil,    20,
   nil,   nil,     5,    22,    35,    28,    29,    30,    31,    32,
    20,   nil,   nil,    34,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,    34,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,   nil,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,    34,    35,    28,    29,    30,    31,    32,
   nil,    27,    33,    34,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,    34,    35,    28,    29,    30,    31,    32,
    35,   nil,    33,    30,    31,    32,    35,   nil,   nil,    30,
    31,    32 ]

racc_action_check = [
    93,    78,    93,    93,    93,    42,    71,    35,    47,    76,
    35,    35,    93,    42,    55,    93,    47,    93,     4,    93,
     4,     4,     4,    25,    93,    93,    78,    52,    43,   101,
     4,    71,    80,     4,    51,     4,    43,     4,    25,    50,
    25,    74,     4,     4,   101,    73,   101,    25,    25,    98,
    98,    63,    58,   101,   101,    63,    63,    63,    63,    63,
    63,    38,    98,    44,    63,    38,    38,    38,    38,    38,
    38,   111,    62,    63,    38,   111,   111,   111,   111,   111,
   111,    83,    90,    38,   111,    83,    83,    83,    83,    83,
    83,    84,    84,   111,    83,    75,    64,    75,    75,    75,
    89,    89,    40,    83,    84,    37,    20,    75,    20,    20,
    20,    91,    91,    89,    75,    94,    66,   106,    20,   106,
   106,   106,    82,    82,    91,    20,    36,   100,    11,   106,
    11,    11,    11,   105,   105,    82,   106,    22,   102,    28,
    11,    28,    28,    28,   112,   112,   105,    11,   103,   104,
    29,    28,    29,    29,    29,   115,   115,   112,    28,    15,
    14,    30,    29,    30,    30,    30,   116,   116,   115,    29,
   107,   108,    81,    30,    81,    81,    81,     0,     0,   116,
    30,    13,    12,    32,    81,    32,    32,    32,   118,   118,
     0,    81,   114,     7,    33,    32,    33,    33,    33,    96,
     5,   118,    32,    96,    96,    34,    33,    34,    34,    34,
    65,   nil,   nil,    33,   nil,   nil,    67,    34,    67,    67,
    67,   nil,   nil,   nil,    34,   nil,   nil,    41,    67,    41,
    41,    41,   nil,   nil,   nil,    67,   nil,   nil,    59,    41,
    59,    59,    59,   nil,   nil,   nil,    41,   nil,   nil,    86,
    59,    86,    86,    86,   nil,   nil,   nil,    59,   nil,   nil,
    39,    86,    39,    39,    39,   nil,   nil,     1,    86,     1,
     1,    31,    39,    31,    31,    31,   nil,   nil,   nil,    39,
   nil,   nil,     1,    31,    92,    92,    92,    92,    92,    92,
    31,   nil,   nil,    92,    77,    77,    77,    77,    77,    77,
   nil,   nil,    92,    77,    54,    54,    54,    54,    54,    54,
   nil,   nil,    77,   nil,     9,     9,     9,     9,     9,     9,
   nil,   nil,    54,     9,    70,    70,    70,    70,    70,    70,
   nil,     9,     9,    70,    88,    88,    88,    88,    88,    88,
   nil,   nil,    70,    88,    53,    53,    53,    53,    53,    53,
    48,   nil,    88,    48,    48,    48,    49,   nil,   nil,    49,
    49,    49 ]

racc_action_pointer = [
   175,   267,   nil,   nil,    14,   197,   nil,   193,   nil,   305,
   nil,   124,   174,   177,   156,   155,   nil,   nil,   nil,   nil,
   102,   nil,   129,   nil,   nil,    19,   nil,   nil,   135,   146,
   157,   267,   179,   190,   201,     3,   121,    88,    56,   256,
    98,   223,    -3,    20,    54,   nil,   nil,     0,   341,   347,
    30,    25,    18,   335,   295,    10,   nil,   nil,    26,   234,
   nil,   nil,    64,    46,    74,   205,    99,   212,   nil,   nil,
   315,     1,   nil,    28,    15,    91,   -17,   285,    -4,   nil,
    24,   168,   120,    76,    89,   nil,   245,   nil,   325,    98,
    56,   109,   275,    -4,   112,   nil,   179,   nil,    47,   nil,
   107,    25,   134,   144,   123,   131,   113,   144,   166,   nil,
   nil,    66,   142,   nil,   166,   153,   164,   nil,   186,   nil ]

racc_action_default = [
   -55,   -55,    -2,    -3,   -55,   -55,   -30,   -55,    -1,    -4,
    -6,   -55,   -55,   -55,   -55,   -55,   -31,   -32,   -33,   -34,
   -55,   -51,   -55,   -53,   -54,   -55,   120,    -5,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -32,   -55,   -55,
   -13,   -55,   -55,   -55,   -42,   -52,    -7,   -55,   -35,   -36,
   -37,   -38,   -39,   -40,   -41,   -43,   -44,   -45,   -10,   -55,
   -50,   -14,   -20,   -55,   -55,   -55,   -55,   -47,   -11,   -12,
   -18,   -55,   -21,   -55,   -10,   -55,   -10,   -48,   -55,   -19,
   -55,   -55,   -55,   -55,   -55,   -46,   -55,   -22,   -23,   -55,
   -10,   -55,   -49,    -8,   -55,   -15,   -55,   -26,   -55,   -17,
   -55,    -9,   -55,   -27,   -10,   -55,   -55,   -10,   -55,   -29,
   -16,   -55,   -55,   -28,   -10,   -55,   -55,   -25,   -55,   -24 ]

racc_goto_table = [
     8,    38,    46,     1,    37,    96,    61,    72,    95,    71,
    44,   107,    69,    57,    78,   nil,   nil,   nil,    48,    49,
    50,    51,    52,    53,    54,    87,   nil,    99,    82,    38,
    84,    63,   nil,   nil,    96,    64,    65,   119,   nil,   nil,
    66,   110,   nil,   nil,    98,   nil,   nil,   nil,   nil,    70,
   nil,   117,   nil,   nil,   nil,   nil,   nil,    77,   109,   nil,
   nil,   112,   nil,   nil,   nil,    83,   nil,   nil,   116,   nil,
   nil,    88,   nil,   nil,   nil,   nil,    92,   nil,    46,   nil,
   nil,   nil,   nil,   nil,   nil,    89,   nil,    91,     8,   nil,
     8,   nil,   nil,   nil,   nil,   nil,   111,   nil,   nil,   nil,
   nil,   105,   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     8,   115,   nil,     8,   nil,   118 ]

racc_goto_check = [
     2,     4,     5,     1,    11,     6,     9,    14,    10,    13,
     4,    15,     7,    16,    19,   nil,   nil,   nil,     4,     4,
     4,     4,     4,     4,     4,    14,   nil,    12,     7,     4,
     7,     4,   nil,   nil,     6,    11,    11,    10,   nil,   nil,
    11,    12,   nil,   nil,     7,   nil,   nil,   nil,   nil,     4,
   nil,    12,   nil,   nil,   nil,   nil,   nil,     4,     7,   nil,
   nil,     7,   nil,   nil,   nil,     4,   nil,   nil,     7,   nil,
   nil,     4,   nil,   nil,   nil,   nil,     4,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,     1,   nil,     1,     2,   nil,
     2,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,     1,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,     1,   nil,     2,   nil,     1 ]

racc_goto_pointer = [
   nil,     3,    -1,   nil,   -10,   -23,   -84,   -46,   nil,   -34,
   -81,    -7,   -64,   -53,   -55,   -92,   -22,   nil,   nil,   -53 ]

racc_goto_default = [
   nil,   nil,     2,     3,     9,    10,   100,   nil,    36,   nil,
   nil,    17,    97,   nil,   nil,   nil,    16,    18,    19,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 33, :_reduce_1,
  1, 33, :_reduce_none,
  1, 34, :_reduce_none,
  2, 34, :_reduce_4,
  3, 34, :_reduce_5,
  2, 34, :_reduce_6,
  3, 34, :_reduce_7,
  1, 38, :_reduce_none,
  2, 38, :_reduce_none,
  0, 39, :_reduce_none,
  1, 39, :_reduce_none,
  4, 37, :_reduce_12,
  2, 37, :_reduce_13,
  3, 37, :_reduce_14,
  7, 37, :_reduce_15,
  9, 37, :_reduce_16,
  7, 37, :_reduce_17,
  3, 40, :_reduce_18,
  3, 41, :_reduce_19,
  0, 45, :_reduce_20,
  1, 45, :_reduce_none,
  3, 45, :_reduce_22,
  3, 46, :_reduce_23,
  8, 42, :_reduce_24,
  6, 42, :_reduce_25,
  1, 42, :_reduce_26,
  0, 47, :_reduce_none,
  2, 47, :_reduce_none,
  3, 44, :_reduce_none,
  1, 35, :_reduce_30,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 36, :_reduce_35,
  3, 36, :_reduce_36,
  3, 36, :_reduce_37,
  3, 36, :_reduce_38,
  3, 36, :_reduce_39,
  3, 36, :_reduce_40,
  3, 36, :_reduce_41,
  2, 36, :_reduce_42,
  3, 36, :_reduce_43,
  3, 36, :_reduce_44,
  3, 36, :_reduce_45,
  6, 36, :_reduce_46,
  0, 51, :_reduce_47,
  1, 51, :_reduce_48,
  3, 51, :_reduce_49,
  3, 48, :_reduce_50,
  1, 43, :_reduce_51,
  2, 43, :_reduce_52,
  1, 49, :_reduce_53,
  1, 50, :_reduce_54 ]

racc_reduce_n = 55

racc_shift_n = 120

racc_token_table = {
  false => 0,
  :error => 1,
  :TEXT => 2,
  :START => 3,
  :LPAREN => 4,
  :RPAREN => 5,
  :STRING => 6,
  :NUM => 7,
  :IDENT => 8,
  :DOT => 9,
  :ADD => 10,
  :SUB => 11,
  :MUL => 12,
  :DIV => 13,
  :MOD => 14,
  :SPACE => 15,
  :DOLLAR => 16,
  :ASSIGN => 17,
  :CMP => 18,
  :IF => 19,
  :END => 20,
  :FOR => 21,
  :IN => 22,
  :BANG => 23,
  :ELSE => 24,
  :ELSEIF => 25,
  :NEWLINE => 26,
  :INNERSPACE => 27,
  :CAPTURE => 28,
  :PARTIAL => 29,
  :COMMA => 30,
  :NOT => 31 }

racc_nt_base = 32

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TEXT",
  "START",
  "LPAREN",
  "RPAREN",
  "STRING",
  "NUM",
  "IDENT",
  "DOT",
  "ADD",
  "SUB",
  "MUL",
  "DIV",
  "MOD",
  "SPACE",
  "DOLLAR",
  "ASSIGN",
  "CMP",
  "IF",
  "END",
  "FOR",
  "IN",
  "BANG",
  "ELSE",
  "ELSEIF",
  "NEWLINE",
  "INNERSPACE",
  "CAPTURE",
  "PARTIAL",
  "COMMA",
  "NOT",
  "$start",
  "program",
  "content",
  "text",
  "expression",
  "statement",
  "stmt_start",
  "opt_newline",
  "assignment",
  "arglist",
  "ifclose",
  "variable",
  "end_block",
  "arguments",
  "argument",
  "opt_parens",
  "group",
  "number",
  "string",
  "explist" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_1(val, _values, result)
     result = combine(val[0], val[1]) 
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_4(val, _values, result)
     result = [:mockle, :output, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_5(val, _values, result)
     result = [:multi, [:mockle, :output, val[1]], [:static, val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_6(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_7(val, _values, result)
     result = val[2] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_12(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_13(val, _values, result)
     result = [:mockle, :partial, val[1], {}] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_14(val, _values, result)
     result = [:mockle, :partial, val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_15(val, _values, result)
     result = [:mockle, :if, val[2], val[5], val[6]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_16(val, _values, result)
     result = [:mockle, :for, val[2], val[4], val[7]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_17(val, _values, result)
     result = [:mockle, :capture, val[2], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_18(val, _values, result)
     result = [:mockle, :assign, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_19(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_20(val, _values, result)
     result = {} 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_22(val, _values, result)
     result.merge!(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_23(val, _values, result)
     result = { val[0] => val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_24(val, _values, result)
     result = [:mockle, :if, val[3], val[6], val[7]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_25(val, _values, result)
     result = val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_26(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_30(val, _values, result)
     result = [:static, val.first] 
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_35(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_36(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_37(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_38(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_39(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_40(val, _values, result)
     result = [:mockle, :concat, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_41(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_42(val, _values, result)
     result = [:mockle, :not, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_43(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_44(val, _values, result)
     result = [:mockle, :dot, val[0], val[2].to_i] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_45(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_46(val, _values, result)
     result = [:mockle, :call, val[0], val[2], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_47(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_48(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_49(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_50(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_51(val, _values, result)
     result = [:mockle, :var, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_52(val, _values, result)
     result = [:mockle, :ctx, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_53(val, _values, result)
     result = [:mockle, :num, val.first] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_54(val, _values, result)
     result = [:mockle, :str, val.first] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Mockle
