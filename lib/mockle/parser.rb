#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'mockle/lexer'

module Mockle
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 138)
  def initialize(options = {})
    super()
  end

  def parse(str)
    @locals = {}
    @lexer = Lexer.new(str)
    [:mockle, :block, do_parse]
  end
  
  alias call parse
  
  def next_token
    @lexer.next_token
  end

  def on_error(t, val, vstack)
    p @lexer
    super
  end
  
  def combine(a, b)
    a = [:multi, a] unless a[0] == :multi
    if b[0] == :multi
      a.concat(b[1..-1])
    else
      a << b
    end
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    11,    90,    24,    23,    21,    68,    72,    84,     7,    72,
     6,     4,    22,    69,    49,    13,    35,    14,    11,    20,
    24,    23,    21,     5,    15,    12,    91,     6,     4,    13,
    22,    14,    85,    13,    49,    14,    68,    20,    15,    12,
     5,   109,    15,    12,    69,   108,   107,    72,   119,    13,
    35,    14,    35,    28,    29,    30,    31,    32,    15,    12,
    63,    34,    35,    77,    35,    28,    29,    30,    31,    32,
    33,    95,    77,    34,    71,    35,    28,    29,    30,    31,
    32,    78,    33,    35,    34,    35,    28,    29,    30,    31,
    32,     6,    98,    33,    34,    41,    81,    24,    23,    21,
     6,     4,    80,    33,    99,    65,    41,    22,    24,    23,
    21,     6,     4,     5,    20,    62,    86,    41,    22,    24,
    23,    21,     6,    98,     5,    20,   -29,    61,    41,    22,
    24,    23,    21,     6,     4,    99,    20,    60,   106,    41,
    22,    24,    23,    21,     6,    98,     5,    20,    79,    72,
    41,    22,    24,    23,    21,     6,     4,    99,    20,   109,
    47,    41,    22,    24,    23,    21,     6,    98,     5,    20,
   111,   113,    41,    22,    24,    23,    21,     6,     4,    99,
    20,    72,    45,    41,    22,    24,    23,    21,     6,    98,
     5,    20,    68,    44,    41,    22,    24,    23,    21,    72,
    69,    99,    20,   118,    43,    41,    22,    24,    23,    21,
    42,    41,    72,    20,    58,    57,    41,    22,    24,    23,
    38,    26,    25,   -30,    20,   nil,   nil,    41,    39,    24,
    23,    21,   nil,   nil,   nil,    20,   nil,   nil,    41,    22,
    24,    23,    21,   nil,   nil,   nil,    20,   nil,   nil,    41,
    22,    24,    23,    21,   nil,   nil,   nil,    20,   nil,   nil,
    41,    22,    24,    23,    21,   nil,   nil,   nil,    20,   nil,
   nil,    41,    22,    24,    23,    21,   nil,    35,   nil,    20,
    30,    31,    32,    22,    35,    28,    29,    30,    31,    32,
    20,   nil,   nil,    34,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,    34,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,   nil,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,    34,    35,    28,    29,    30,    31,    32,
   nil,    27,    33,    34,    35,    28,    29,    30,    31,    32,
   nil,   nil,    33,    34,    35,    28,    29,    30,    31,    32,
    35,   nil,    33,    30,    31,    32 ]

racc_action_check = [
    98,    83,    98,    98,    98,    45,    95,    75,     1,    78,
     1,     1,    98,    45,   106,    98,    53,    98,     4,    98,
     4,     4,     4,     1,    98,    98,    83,   117,   117,   106,
     4,   106,    75,     4,    25,     4,    49,     4,   106,   106,
   117,   101,     4,     4,    49,   101,   101,    81,   116,    25,
    52,    25,   116,   116,   116,   116,   116,   116,    25,    25,
    40,   116,    54,    85,    40,    40,    40,    40,    40,    40,
   116,    88,    65,    40,    57,    88,    88,    88,    88,    88,
    88,    66,    40,    46,    88,    66,    66,    66,    66,    66,
    66,   110,   110,    88,    66,    30,    70,    30,    30,    30,
    87,    87,    69,    66,   110,    42,    20,    30,    20,    20,
    20,   103,   103,    87,    30,    39,    77,    71,    20,    71,
    71,    71,   120,   120,   103,    20,    38,    37,   111,    71,
   111,   111,   111,    89,    89,   120,    71,    36,    99,    28,
   111,    28,    28,    28,    96,    96,    89,   111,    67,    60,
    29,    28,    29,    29,    29,   121,   121,    96,    28,   105,
    22,    86,    29,    86,    86,    86,    94,    94,   121,    29,
   107,   108,    31,    86,    31,    31,    31,     0,     0,    94,
    86,   109,    15,    32,    31,    32,    32,    32,   123,   123,
     0,    31,    44,    14,    33,    32,    33,    33,    33,   112,
    44,   123,    32,   113,    13,    34,    33,    34,    34,    34,
    12,    35,   119,    33,    35,    35,    11,    34,    11,    11,
    11,     7,     5,    62,    34,   nil,   nil,    79,    11,    79,
    79,    79,   nil,   nil,   nil,    11,   nil,   nil,    91,    79,
    91,    91,    91,   nil,   nil,   nil,    79,   nil,   nil,    43,
    91,    43,    43,    43,   nil,   nil,   nil,    91,   nil,   nil,
    41,    43,    41,    41,    41,   nil,   nil,   nil,    43,   nil,
   nil,    61,    41,    61,    61,    61,   nil,    51,   nil,    41,
    51,    51,    51,    61,    93,    93,    93,    93,    93,    93,
    61,   nil,   nil,    93,    82,    82,    82,    82,    82,    82,
   nil,   nil,    93,    82,    56,    56,    56,    56,    56,    56,
   nil,   nil,    82,   nil,     9,     9,     9,     9,     9,     9,
   nil,   nil,    56,     9,    74,    74,    74,    74,    74,    74,
   nil,     9,     9,    74,    97,    97,    97,    97,    97,    97,
   nil,   nil,    74,    97,    55,    55,    55,    55,    55,    55,
    50,   nil,    97,    50,    50,    50 ]

racc_action_pointer = [
   175,     8,   nil,   nil,    14,   219,   nil,   221,   nil,   305,
   nil,   212,   202,   200,   189,   178,   nil,   nil,   nil,   nil,
   102,   nil,   152,   nil,   nil,    30,   nil,   nil,   135,   146,
    91,   168,   179,   190,   201,   207,   132,   110,   109,   107,
    55,   256,   101,   245,   184,    -3,    74,   nil,   nil,    28,
   341,   268,    41,     7,    53,   335,   295,    70,   nil,   nil,
   123,   267,   206,   nil,   nil,    64,    76,   126,   nil,    94,
    91,   113,   nil,   nil,   315,     2,   nil,    99,   -17,   223,
   nil,    21,   285,    -4,   nil,    55,   157,    98,    66,   131,
   nil,   234,   nil,   275,   164,   -20,   142,   325,    -4,   135,
   nil,    21,   nil,   109,   nil,   139,    10,   166,   167,   155,
    89,   124,   173,   198,   nil,   nil,    43,    25,   nil,   186,
   120,   153,   nil,   186,   nil ]

racc_action_default = [
   -57,   -57,    -2,    -3,   -57,   -57,   -32,   -57,    -1,    -4,
    -6,   -57,   -57,   -57,   -57,   -57,   -33,   -34,   -35,   -36,
   -57,   -53,   -57,   -55,   -56,   -57,   125,    -5,   -57,   -57,
   -57,   -57,   -57,   -57,   -57,   -57,   -57,   -57,   -53,   -57,
   -57,   -57,   -13,   -57,   -57,   -57,   -44,   -54,    -7,   -57,
   -37,   -38,   -39,   -40,   -41,   -42,   -43,   -45,   -46,   -47,
   -10,   -57,   -54,   -52,   -14,   -20,   -57,   -57,   -29,   -57,
   -57,   -49,   -11,   -12,   -18,   -57,   -21,   -57,   -10,   -57,
   -30,   -10,   -50,   -57,   -19,   -57,   -57,   -57,   -57,   -57,
   -48,   -57,   -22,   -23,   -57,   -10,   -57,   -51,    -8,   -57,
   -15,   -57,   -26,   -57,   -17,   -57,    -9,   -57,   -27,   -10,
   -57,   -57,   -10,   -57,   -31,   -16,   -57,   -57,   -28,   -10,
   -57,   -57,   -25,   -57,   -24 ]

racc_goto_table = [
     8,    40,    48,     1,    64,   101,   100,    73,    75,    76,
    46,   112,   104,    67,    70,    59,    83,   nil,    50,    51,
    52,    53,    54,    55,    56,    87,   115,   nil,    89,    92,
   nil,    40,   nil,    66,   101,   124,   122,   nil,   nil,   nil,
   nil,   nil,   103,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    74,   nil,   nil,   nil,   nil,   114,   nil,   nil,   117,
   nil,    82,   nil,   nil,   nil,   nil,   121,   nil,   nil,    88,
   nil,   nil,   nil,   nil,   nil,   nil,    93,   nil,   nil,   nil,
   nil,    97,   nil,    48,   nil,   nil,   nil,   nil,   nil,   nil,
    94,   nil,    96,     8,   nil,     8,   nil,   nil,   nil,   nil,
   nil,   116,   nil,   nil,   nil,   nil,   110,   nil,   nil,     8,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,
   120,   nil,     8,   nil,   123 ]

racc_goto_check = [
     2,     4,     5,     1,     9,     6,    10,     7,    13,    14,
     4,    15,    12,    11,    11,    16,    20,   nil,     4,     4,
     4,     4,     4,     4,     4,     7,    12,   nil,     7,    14,
   nil,     4,   nil,     4,     6,    10,    12,   nil,   nil,   nil,
   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,     7,   nil,   nil,     7,
   nil,     4,   nil,   nil,   nil,   nil,     7,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,
   nil,     4,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,
     1,   nil,     1,     2,   nil,     2,   nil,   nil,   nil,   nil,
   nil,     4,   nil,   nil,   nil,   nil,     1,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
     1,   nil,     2,   nil,     1 ]

racc_goto_pointer = [
   nil,     3,    -1,   nil,   -10,   -23,   -89,   -53,   nil,   -38,
   -88,   -31,   -84,   -57,   -56,   -97,   -20,   nil,   nil,   nil,
   -55 ]

racc_goto_default = [
   nil,   nil,     2,     3,     9,    10,   105,   nil,    36,   nil,
   nil,    37,   102,   nil,   nil,   nil,    16,    17,    18,    19,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 33, :_reduce_1,
  1, 33, :_reduce_none,
  1, 34, :_reduce_none,
  2, 34, :_reduce_4,
  3, 34, :_reduce_5,
  2, 34, :_reduce_6,
  3, 34, :_reduce_7,
  1, 38, :_reduce_none,
  2, 38, :_reduce_none,
  0, 39, :_reduce_none,
  1, 39, :_reduce_none,
  4, 37, :_reduce_12,
  2, 37, :_reduce_13,
  3, 37, :_reduce_14,
  7, 37, :_reduce_15,
  9, 37, :_reduce_16,
  7, 37, :_reduce_17,
  3, 40, :_reduce_18,
  3, 41, :_reduce_19,
  0, 45, :_reduce_20,
  1, 45, :_reduce_none,
  3, 45, :_reduce_22,
  3, 46, :_reduce_23,
  8, 42, :_reduce_24,
  6, 42, :_reduce_25,
  1, 42, :_reduce_26,
  0, 47, :_reduce_none,
  2, 47, :_reduce_none,
  1, 43, :_reduce_29,
  2, 43, :_reduce_30,
  3, 44, :_reduce_none,
  1, 35, :_reduce_32,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 36, :_reduce_37,
  3, 36, :_reduce_38,
  3, 36, :_reduce_39,
  3, 36, :_reduce_40,
  3, 36, :_reduce_41,
  3, 36, :_reduce_42,
  3, 36, :_reduce_43,
  2, 36, :_reduce_44,
  3, 36, :_reduce_45,
  3, 36, :_reduce_46,
  3, 36, :_reduce_47,
  6, 36, :_reduce_48,
  0, 52, :_reduce_49,
  1, 52, :_reduce_50,
  3, 52, :_reduce_51,
  3, 48, :_reduce_52,
  1, 49, :_reduce_53,
  2, 49, :_reduce_54,
  1, 50, :_reduce_55,
  1, 51, :_reduce_56 ]

racc_reduce_n = 57

racc_shift_n = 125

racc_token_table = {
  false => 0,
  :error => 1,
  :TEXT => 2,
  :START => 3,
  :LPAREN => 4,
  :RPAREN => 5,
  :STRING => 6,
  :NUM => 7,
  :IDENT => 8,
  :DOT => 9,
  :ADD => 10,
  :SUB => 11,
  :MUL => 12,
  :DIV => 13,
  :MOD => 14,
  :SPACE => 15,
  :DOLLAR => 16,
  :ASSIGN => 17,
  :CMP => 18,
  :IF => 19,
  :END => 20,
  :FOR => 21,
  :IN => 22,
  :BANG => 23,
  :ELSE => 24,
  :ELSEIF => 25,
  :NEWLINE => 26,
  :INNERSPACE => 27,
  :CAPTURE => 28,
  :PARTIAL => 29,
  :COMMA => 30,
  :NOT => 31 }

racc_nt_base = 32

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TEXT",
  "START",
  "LPAREN",
  "RPAREN",
  "STRING",
  "NUM",
  "IDENT",
  "DOT",
  "ADD",
  "SUB",
  "MUL",
  "DIV",
  "MOD",
  "SPACE",
  "DOLLAR",
  "ASSIGN",
  "CMP",
  "IF",
  "END",
  "FOR",
  "IN",
  "BANG",
  "ELSE",
  "ELSEIF",
  "NEWLINE",
  "INNERSPACE",
  "CAPTURE",
  "PARTIAL",
  "COMMA",
  "NOT",
  "$start",
  "program",
  "content",
  "text",
  "expression",
  "statement",
  "stmt_start",
  "opt_newline",
  "assignment",
  "arglist",
  "ifclose",
  "lvalue",
  "end_block",
  "arguments",
  "argument",
  "opt_parens",
  "group",
  "variable",
  "number",
  "string",
  "explist" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_1(val, _values, result)
     result = combine(val[0], val[1]) 
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_4(val, _values, result)
     result = [:mockle, :output, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_5(val, _values, result)
     result = [:multi, [:mockle, :output, val[1]], [:static, val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_6(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_7(val, _values, result)
     result = val[2] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_12(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_13(val, _values, result)
     result = [:mockle, :partial, val[1], {}] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_14(val, _values, result)
     result = [:mockle, :partial, val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_15(val, _values, result)
     result = [:mockle, :if, val[2], val[5], val[6]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_16(val, _values, result)
     result = [:mockle, :for, val[2], val[4], val[7]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_17(val, _values, result)
     result = [:mockle, :capture, val[2], val[5]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_18(val, _values, result)
     result = [:mockle, :assign, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_19(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 62)
  def _reduce_20(val, _values, result)
     result = {} 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_22(val, _values, result)
     result.merge!(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_23(val, _values, result)
     result = { val[0] => val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_24(val, _values, result)
     result = [:mockle, :if, val[3], val[6], val[7]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_25(val, _values, result)
     result = val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_26(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_29(val, _values, result)
            @locals[val[0]] = true
        result = [:mockle, :var, val[0]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_30(val, _values, result)
     result = [:mockle, :lctx, val[1]] 
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_32(val, _values, result)
     result = [:static, val.first] 
    result
  end
.,.,

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_37(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_38(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_39(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 105)
  def _reduce_40(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 106)
  def _reduce_41(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_42(val, _values, result)
     result = [:mockle, :concat, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_43(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_44(val, _values, result)
     result = [:mockle, :not, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_45(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_46(val, _values, result)
     result = [:mockle, :dot, val[0], val[2].to_i] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_47(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_48(val, _values, result)
     result = [:mockle, :call, val[0], val[2], val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_49(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_50(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_51(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_52(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_53(val, _values, result)
     result = [:mockle, @locals[val[0]] ? :var : :ctx, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_54(val, _values, result)
     result = [:mockle, :ctx, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_55(val, _values, result)
     result = [:mockle, :num, val.first] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_56(val, _values, result)
     result = [:mockle, :str, val.first] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Mockle
