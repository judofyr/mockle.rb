#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'mockle/lexer'

module Mockle
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 105)
  def initialize(options = {})
    super()
  end

  def parse(str)
    @locals = {}
    @lexer = Lexer.new(str)
    [:mockle, :block, do_parse]
  end
  
  alias call parse
  
  def next_token
    @lexer.next_token
  end

  def on_error(*a)
    p a
    p @lexer
    super
  end
  
  def combine(a, b)
    a = [:multi, a] unless a[0] == :multi
    if b[0] == :multi
      a.concat(b[1..-1])
    else
      a << b
    end
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    73,     6,    74,    52,    65,    24,    25,    26,    27,    28,
    66,     6,     4,    30,    75,    24,    25,    26,    27,    28,
    54,    65,    29,    30,     5,    24,    25,    26,    27,    28,
    94,    62,    29,    30,    68,    24,    25,    26,    27,    28,
    57,    36,    29,    30,    20,    18,    36,    57,    61,    20,
    18,    36,    29,    19,    20,    34,    62,    83,    19,   -22,
    17,    82,    81,    33,    36,    17,    53,    20,    18,    36,
    17,    67,    20,    18,    36,    62,    19,    20,    18,    51,
    85,    19,    87,    17,    62,    41,    19,    36,    17,    39,
    20,    18,    11,    17,    62,    20,    18,    43,    11,    19,
    93,    20,    18,    83,    19,    38,    17,    12,    37,    13,
    19,    17,    12,    12,    13,    13,    36,    17,    36,    20,
    18,    20,    18,    24,    25,    26,    27,    28,    19,    36,
    19,    30,    20,    18,    62,    17,    22,    17,    21,    36,
    29,    19,    20,    18,     6,    74,    80,   nil,    17,    36,
    43,    19,    20,    18,    26,    27,    28,    75,    17,    36,
   nil,    19,    20,    18,   nil,    12,   nil,    13,    17,    36,
   nil,    19,    20,    18,     7,   nil,     6,     4,    17,    36,
   nil,    19,    20,    18,     6,     4,     6,     4,    17,     5,
   nil,    19,    24,    25,    26,    27,    28,     5,    17,     5,
    30,   nil,    24,    25,    26,    27,    28,   nil,    23,    29,
    30,    24,    25,    26,    27,    28,     6,    74,   nil,    29,
     6,     4,     6,     4,     6,    74,   nil,    36,    29,    75,
    59,    58,   nil,     5,   nil,     5,   nil,    75,    24,    25,
    26,    27,    28,    26,    27,    28 ]

racc_action_check = [
    71,    95,    95,    32,    68,    71,    71,    71,    71,    71,
    55,    70,    70,    71,    95,    55,    55,    55,    55,    55,
    35,    53,    71,    55,    70,    35,    35,    35,    35,    35,
    91,    51,    55,    35,    61,    91,    91,    91,    91,    91,
    43,    17,    35,    91,    17,    17,    37,    38,    43,    37,
    37,    11,    91,    17,    11,    11,    73,    77,    37,    34,
    17,    77,    77,    11,    36,    37,    33,    36,    36,    67,
    11,    56,    67,    67,    85,    66,    36,    85,    85,    31,
    81,    67,    82,    36,    83,    19,    85,    52,    67,    15,
    52,    52,     4,    85,    86,     4,     4,    80,    74,    52,
    87,    74,    74,    90,     4,    13,    52,     4,    12,     4,
    74,     4,    80,    74,    80,    74,    24,    74,    25,    24,
    24,    25,    25,    64,    64,    64,    64,    64,    24,    26,
    25,    64,    26,    26,    94,    24,     7,    25,     5,    27,
    64,    26,    27,    27,    72,    72,    75,   nil,    26,    28,
    21,    27,    28,    28,    44,    44,    44,    72,    27,    65,
   nil,    28,    65,    65,   nil,    21,   nil,    21,    28,    30,
   nil,    65,    30,    30,     1,   nil,     1,     1,    65,    29,
   nil,    30,    29,    29,    96,    96,    92,    92,    30,     1,
   nil,    29,     9,     9,     9,     9,     9,    96,    29,    92,
     9,   nil,    69,    69,    69,    69,    69,   nil,     9,     9,
    69,    50,    50,    50,    50,    50,    84,    84,   nil,    69,
    79,    79,     0,     0,    98,    98,   nil,    39,    50,    84,
    39,    39,   nil,    79,   nil,     0,   nil,    98,    49,    49,
    49,    49,    49,    45,    45,    45 ]

racc_action_pointer = [
   220,   174,   nil,   nil,    88,   135,   nil,   136,   nil,   182,
   nil,    47,   104,   101,   nil,    80,   nil,    37,   nil,    77,
   nil,   146,   nil,   nil,   112,   114,   125,   135,   145,   175,
   165,    74,   -14,    58,    42,    15,    60,    42,    39,   223,
   nil,   nil,   nil,    32,   142,   231,   nil,   nil,   nil,   228,
   201,     5,    83,     4,   nil,     5,    49,   nil,   nil,   nil,
   nil,    26,   nil,   nil,   113,   155,    49,    65,   -13,   192,
     9,    -5,   142,    30,    94,   143,   nil,    37,   nil,   218,
    93,    76,    78,    58,   214,    70,    68,    95,   nil,   nil,
    83,    25,   184,   nil,   108,    -1,   182,   nil,   222,   nil ]

racc_action_default = [
   -43,   -43,    -2,    -3,   -43,   -43,   -24,   -43,    -1,    -4,
    -6,   -43,   -43,   -43,   -25,   -26,   -27,   -43,   -37,   -43,
   -42,   -43,   100,    -5,   -43,   -43,   -43,   -43,   -43,   -43,
   -43,   -43,   -43,   -43,   -37,   -43,   -43,   -43,   -43,   -43,
   -35,   -38,    -7,   -43,   -28,   -29,   -30,   -31,   -32,   -33,
   -34,   -10,   -43,   -38,   -36,   -43,   -43,   -22,   -39,   -40,
   -41,   -43,   -11,   -12,   -15,   -43,   -10,   -43,   -43,   -16,
   -43,   -43,   -43,   -10,    -8,   -43,   -13,   -43,   -19,   -43,
    -9,   -43,   -20,   -10,   -43,   -43,   -10,   -43,   -23,   -14,
   -43,   -43,   -43,   -21,   -10,   -43,   -43,   -18,   -43,   -17 ]

racc_goto_table = [
     8,    35,    42,     1,    76,    56,    63,    40,    86,    60,
   nil,    90,    89,   nil,    44,    45,    46,    47,    48,    49,
    50,    70,    90,    97,   nil,   nil,    35,    55,    79,   nil,
    99,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,   nil,
   nil,    92,    64,   nil,   nil,   nil,   nil,   nil,   nil,    96,
   nil,   nil,   nil,   nil,   nil,    69,   nil,    71,   nil,   nil,
   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   nil,    72,   nil,    91,   nil,   nil,   nil,   nil,
   nil,   nil,    84,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     8,    95,   nil,     8,   nil,    98 ]

racc_goto_check = [
     2,     4,     5,     1,     9,    10,     7,     4,    12,    13,
   nil,     6,    11,   nil,     4,     4,     4,     4,     4,     4,
     4,     7,     6,    11,   nil,   nil,     4,     4,     7,   nil,
     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,
   nil,     7,     4,   nil,   nil,   nil,   nil,   nil,   nil,     7,
   nil,   nil,   nil,   nil,   nil,     4,   nil,     4,   nil,   nil,
   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2,   nil,     1,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,     1,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,     1,   nil,     2,   nil,     1 ]

racc_goto_pointer = [
   nil,     3,    -1,   nil,   -10,   -19,   -73,   -45,   nil,   -68,
   -33,   -72,   -74,   -30,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     9,    10,    77,   nil,    31,   nil,
    32,    78,   nil,    14,    15,    16 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 30, :_reduce_1,
  1, 30, :_reduce_none,
  1, 31, :_reduce_none,
  2, 31, :_reduce_4,
  3, 31, :_reduce_5,
  2, 31, :_reduce_6,
  3, 31, :_reduce_7,
  1, 35, :_reduce_none,
  2, 35, :_reduce_none,
  0, 36, :_reduce_none,
  1, 36, :_reduce_none,
  4, 34, :_reduce_12,
  7, 34, :_reduce_13,
  9, 34, :_reduce_14,
  3, 37, :_reduce_15,
  4, 37, :_reduce_16,
  8, 38, :_reduce_17,
  6, 38, :_reduce_18,
  1, 38, :_reduce_19,
  0, 41, :_reduce_none,
  2, 41, :_reduce_none,
  1, 39, :_reduce_22,
  3, 40, :_reduce_none,
  1, 32, :_reduce_24,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  3, 33, :_reduce_28,
  3, 33, :_reduce_29,
  3, 33, :_reduce_30,
  3, 33, :_reduce_31,
  3, 33, :_reduce_32,
  3, 33, :_reduce_33,
  3, 33, :_reduce_34,
  2, 33, :_reduce_35,
  3, 42, :_reduce_36,
  1, 43, :_reduce_37,
  2, 43, :_reduce_38,
  3, 43, :_reduce_39,
  3, 43, :_reduce_40,
  3, 43, :_reduce_41,
  1, 44, :_reduce_42 ]

racc_reduce_n = 43

racc_shift_n = 100

racc_token_table = {
  false => 0,
  :error => 1,
  :TEXT => 2,
  :START => 3,
  :LPAREN => 4,
  :RPAREN => 5,
  :STRING => 6,
  :NUM => 7,
  :IDENT => 8,
  :DOT => 9,
  :ADD => 10,
  :SUB => 11,
  :MUL => 12,
  :DIV => 13,
  :MOD => 14,
  :SPACE => 15,
  :DOLLAR => 16,
  :ASSIGN => 17,
  :CMP => 18,
  :IF => 19,
  :END => 20,
  :FOR => 21,
  :IN => 22,
  :BANG => 23,
  :ELSE => 24,
  :ELSEIF => 25,
  :NEWLINE => 26,
  :INNERSPACE => 27,
  :NOT => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "TEXT",
  "START",
  "LPAREN",
  "RPAREN",
  "STRING",
  "NUM",
  "IDENT",
  "DOT",
  "ADD",
  "SUB",
  "MUL",
  "DIV",
  "MOD",
  "SPACE",
  "DOLLAR",
  "ASSIGN",
  "CMP",
  "IF",
  "END",
  "FOR",
  "IN",
  "BANG",
  "ELSE",
  "ELSEIF",
  "NEWLINE",
  "INNERSPACE",
  "NOT",
  "$start",
  "program",
  "content",
  "text",
  "expression",
  "statement",
  "stmt_start",
  "opt_newline",
  "assignment",
  "ifclose",
  "local_ident",
  "end_block",
  "opt_parens",
  "group",
  "variable",
  "number" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_1(val, _values, result)
     result = combine(val[0], val[1]) 
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_4(val, _values, result)
     result = [:mockle, :output, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_5(val, _values, result)
     result = [:multi, [:mockle, :output, val[1]], [:static, val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_6(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_7(val, _values, result)
     result = val[2] 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_12(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_13(val, _values, result)
     result = [:mockle, :if, val[2], val[5], val[6]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_14(val, _values, result)
            result = [:mockle, :for, val[2], val[4], val[7]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_15(val, _values, result)
     result = [:mockle, :assign, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_16(val, _values, result)
     result = [:mockle, :assign, [:mockle, :lctx, val[1]], val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_17(val, _values, result)
     result = [:mockle, :if, val[3], val[6], val[7]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_18(val, _values, result)
     result = val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_19(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_22(val, _values, result)
            @locals[val[0]] = true
        result = [:mockle, :var, val[0]]
      
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_24(val, _values, result)
     result = [:static, val.first] 
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_28(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_29(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_30(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_31(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 82)
  def _reduce_32(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_33(val, _values, result)
     result = [:mockle, :concat, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_34(val, _values, result)
     result = [:mockle, :op, val[1], val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_35(val, _values, result)
     result = [:mockle, :not, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_36(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_37(val, _values, result)
     result = [:mockle, @locals[val[0]] ? :var : :ctx, val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 92)
  def _reduce_38(val, _values, result)
     result = [:mockle, :ctx, val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_39(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_40(val, _values, result)
     result = [:mockle, :dot, val[0], val[2].to_i] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_41(val, _values, result)
     result = [:mockle, :dot, val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_42(val, _values, result)
     result = [:mockle, :num, val.first] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Mockle
